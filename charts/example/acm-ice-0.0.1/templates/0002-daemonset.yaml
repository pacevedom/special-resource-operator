apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
  namespace: {{.Values.specialResourceModule.spec.namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
  namespace: {{.Values.specialResourceModule.spec.namespace}}
rules:
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - privileged
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
subjects:
- kind: ServiceAccount
  name: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
  namespace: {{.Values.specialResourceModule.spec.namespace}}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
  namespace: {{.Values.specialResourceModule.spec.namespace}}
  labels:
    app: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
  annotations:
    specialResourceModule.openshift.io/wait: "true"
    specialResourceModule.openshift.io/state: "driver-container"
    specialResourceModule.openshift.io/kernel-affine: "true"
spec:
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
  template:
    metadata:
      # mark this pod as a critical add-on; when enabled, the critical add-on scheduler
      # reserves resources for critical add-on pods so that they can be rescheduled after
      # a failure.  this annotation works in tandem with the toleration below.

      # TODO: Use spec.priorityClassName
      # 'scheduler.alpha.kubernetes.io/critical-pod' was deprecated in K8s 1.16
      # https://github.com/kubernetes/kubernetes/blob/e9ce31bcb3feb411c4de4902651e43dbb78ed151/CHANGELOG-1.16.md
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
    spec:
      priorityClassName: system-node-critical
      serviceAccount: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
      serviceAccountName: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/{{.Values.specialResourceModule.spec.namespace}}/{{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}:v{{.Values.kernelFullVersion}}
        name: {{.Values.specialResourceModule.metadata.name}}-{{.Values.groupName.driverContainer}}
        imagePullPolicy: Always
        command: ["/scripts/load.sh"]
        lifecycle:
          preStop:
            exec:
              command: ["/scripts/unload.sh"]
        securityContext:
          privileged: true
      nodeSelector:
        node-role.kubernetes.io/worker: ""
